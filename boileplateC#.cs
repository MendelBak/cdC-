/************************ Commands *************************/
// To start a new console app, create a folder, enter it. then run:
dotnet new console
// To start a new web app, create a folder, enter it. then run:
dotnet new web
// To start a new web app with MVC, create a folder, enter it. then run:
dotnet new MVC
// To restore a folder to make dependencies run:
dotnet restore
// To run a C# app:
dotnet run
// If Microsoft.DotNet.Watcher.Tools is included in your Starup.cs file (will watch for file changes and recompile automatically):
dotnet watch run
// Set development environment variable for developer exception/error page:
SET ASPNETCORE_ENVIRONMENT=Development

// After you have created a new web app, create a few new directories and files following this scaffolding strategy //

// (root)
// .vscode (Autogenerated. Debugger files)
// > bin (Autogenerated)
// > Controllers (Create this directory)
//   > HomeController.cs
// > Models (Classes and database context)
//   > DbContext.cs
//   > User.cs 
// > obj (Autogenerated)
// > Views (Create this directory)
//   > Home (Must match the controller name from above)
//     > index.cshtml
//   > Shared (This is the last place the compiler will look for views. It is for views that are shared between multiple controllers)
// > wwwroot (autogenerated. This contains your static files (images, css, js).)
//   > css (Create this directory)
//     > style.css
//   > img (Create this directory)
//     > img1.jpg
//   > js (Create this directory)
//     > script.js

// END FILE STRUCTURE //

/************************ Configuring your files*************************/
// DONT FORGET TO CHANGE NAMESPACES, DB NAMES, AND PROJECT NAMES!

// Startup.cs (contains "Using" statements and is where you enable services like session, MVC, DbContext, and other tools.):

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;;

namespace portfolio
{
    public class Startup
    {
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddMvc();
            services.AddSession();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            app.UseSession();
            app.UseMvc();
            app.UseStaticFiles();
        }
    }
}

// END Startup.cs

// Program.cs

using System.IO;
using Microsoft.AspNetCore.Hosting;

namespace BankAccounts
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var host = new WebHostBuilder()
                .UseKestrel()
                .UseContentRoot(Directory.GetCurrentDirectory())
                .UseStartup<Startup>()
                .Build();

            host.Run();
        }
    }
}

// END Program.cs
